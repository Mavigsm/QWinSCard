<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="cardevent_8cpp" kind="file" language="C++">
    <compoundname>cardevent.cpp</compoundname>
    <includes local="no">QtCore/QThread</includes>
    <includes local="no">QtCore/QMutex</includes>
    <includes local="no">QtCore/QHash</includes>
    <includes local="no">winscard.h</includes>
    <includes refid="cardevent_8h" local="yes">cardevent.h</includes>
    <incdepgraph>
      <node id="44">
        <label>cardevent.cpp</label>
        <link refid="cardevent_8cpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>NativeSCard.h</label>
        <link refid="_native_s_card_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>APDUCommand.h</label>
        <link refid="_a_p_d_u_command_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>QByteArray</label>
      </node>
      <node id="51">
        <label>APDUResponse.h</label>
        <link refid="_a_p_d_u_response_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>winscard.h</label>
      </node>
      <node id="55">
        <label>WinSCardErr.h</label>
        <link refid="winscarderr_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>QtCore/QHash</label>
      </node>
      <node id="46">
        <label>QtCore/QMutex</label>
      </node>
      <node id="54">
        <label>QtCore/QByteArray</label>
      </node>
      <node id="45">
        <label>QtCore/QThread</label>
      </node>
      <node id="56">
        <label>winerror.h</label>
      </node>
      <node id="58">
        <label>QtCore/quuid.h</label>
      </node>
      <node id="57">
        <label>QtCore/qmap.h</label>
      </node>
      <node id="49">
        <label>cardevent.h</label>
        <link refid="cardevent_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implements the CardEvent class. </para>    </briefdescription>
    <detaileddescription>
<para>File is contains source of class CardEvent must implement a card detection mechanism. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;QtCore/QThread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QMutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QtCore/QHash&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winscard.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cardevent_8h" kindref="compound">cardevent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_smartcards" kindref="compound">Smartcards</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="class_smartcards_1_1_card_event_1acd98536af5d07f06d825042fb2034a5a" kindref="member">CardEvent::CardEvent</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/>:<sp/>QObject()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/>m_sCard-&gt;EstablishContext(<ref refid="namespace_smartcards_1a58ca156488c781fb42e2cf0a8b6bc34ba159444b7dc2ab03137ed24f5050727b4" kindref="member">User</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/>initStartTokenWatchThread();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">CardEvent::~CardEvent()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/>terminateStopSCardWatchThread();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/>m_sCard-&gt;ReleaseContext();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::initStartTokenWatchThread()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/>connect(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SIGNAL(onStopCardEvents()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(stop()),<sp/>Qt::DirectConnection);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/>m_Thread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QThread;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/>this-&gt;moveToThread(m_Thread);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/>connect(m_Thread,<sp/>SIGNAL(started()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(run()),<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/>connect(m_Thread,<sp/>SIGNAL(finished()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(deleteLater()),<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/>connect(m_Thread,<sp/>SIGNAL(finished()),<sp/>m_Thread,<sp/>SLOT(deleteLater()),<sp/>Qt::QueuedConnection);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/>m_Thread-&gt;start();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/>m_bRunCardDetection<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::terminateStopSCardWatchThread()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/>m_bRunCardDetection)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/>QMutex<sp/>lMutex;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/>lMutex.lock();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/>m_bRunCardDetection<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/>lMutex.unlock();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/>emit<sp/>onStopCardEvents();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/>m_Thread-&gt;wait();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/>m_Thread<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::run(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/>DWORD<sp/>state;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/>QByteArray<sp/>ATR;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/>DWORD<sp/><sp/>nProtocol;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/>QStringList<sp/>readersList;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/>QMutex<sp/>sMutex;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>QMutexLocker<sp/>locker(&amp;sMutex);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>m_sCard-&gt;throwErrors(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>readersList<sp/>=<sp/>m_sCard-&gt;ListReaders();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>readersList.count();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>readerName<sp/>=<sp/>readersList.at(i);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>m_sCard-&gt;Connect(readerName,<sp/><ref refid="namespace_smartcards_1a1f007601bac24f0cea5d4fdf7a6f2d70acaf62733ba56e46fd97c01164cc6c9e8" kindref="member">Shared</ref>,<sp/><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7aada08ad1ace542f0e8ff7bf164ceb0d39" kindref="member">T0orT1</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_sCard-&gt;isError())</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ATR<sp/>=<sp/>m_sCard-&gt;GetCardStatus(state,<sp/>nProtocol);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sCard-&gt;Disconnect(<ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6aa8dacadb08049329c6eda8db3a5b79a36" kindref="member">Leave</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="namespace_smartcards_1a73943b78745ad2a6b16b7b435e0545cda3451a687ed7b11c76af1611516307463" kindref="member">Specific</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_Readers.insert(readerName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>emit<sp/>cardInserted(readerName,<sp/>ATR);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Readers.insert(readerName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/>tId=startTimer(500);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::setCardDetection(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDetect)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/>QMutex<sp/>mutex;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/>mutex.lock();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/>m_bRunCardDetection=isDetect;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/>mutex.unlock();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::stop(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/>setCardDetection(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/>thread()-&gt;quit();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CardEvent::timerEvent(<sp/>QTimerEvent*<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/>Q_UNUSED(e)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/>if(m_sCard.isNull()<sp/>||<sp/>!m_bRunCardDetection)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>return;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/>try</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>QMutexLocker<sp/>locker(&amp;mMutex);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>DWORD<sp/>state;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>QByteArray<sp/>ATR;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>DWORD<sp/>nProtocol;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>QStringList<sp/>readers;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>m_sCard-&gt;EstablishContext(<ref refid="namespace_smartcards_1a58ca156488c781fb42e2cf0a8b6bc34ba159444b7dc2ab03137ed24f5050727b4" kindref="member">User</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>readers=m_sCard-&gt;ListReaders();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_sCard-&gt;isError())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>readers.count();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>readerName<sp/>=<sp/>readers.at(i);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Readers.contains(readerName))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sCard-&gt;Connect(readerName,<sp/><ref refid="namespace_smartcards_1a1f007601bac24f0cea5d4fdf7a6f2d70acaf62733ba56e46fd97c01164cc6c9e8" kindref="member">Shared</ref>,<sp/><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7aada08ad1ace542f0e8ff7bf164ceb0d39" kindref="member">T0orT1</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_sCard-&gt;isError())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ATR<sp/>=<sp/>m_sCard-&gt;GetCardStatus(state,<sp/>nProtocol);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="namespace_smartcards_1a73943b78745ad2a6b16b7b435e0545cda3451a687ed7b11c76af1611516307463" kindref="member">Specific</ref><sp/>&amp;&amp;<sp/>!m_Readers[readerName])</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Readers[readerName]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sCard-&gt;Disconnect(<ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6aa8dacadb08049329c6eda8db3a5b79a36" kindref="member">Leave</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/>cardInserted(readerName,<sp/>ATR);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_Readers[readerName])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Readers[readerName]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/>cardRemoved(readerName);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sCard-&gt;Connect(readerName,<sp/><ref refid="namespace_smartcards_1a1f007601bac24f0cea5d4fdf7a6f2d70acaf62733ba56e46fd97c01164cc6c9e8" kindref="member">Shared</ref>,<sp/><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7aada08ad1ace542f0e8ff7bf164ceb0d39" kindref="member">T0orT1</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_sCard-&gt;isError())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ATR<sp/>=<sp/>m_sCard-&gt;GetCardStatus(state,<sp/>nProtocol);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/><ref refid="namespace_smartcards_1a73943b78745ad2a6b16b7b435e0545cda3451a687ed7b11c76af1611516307463" kindref="member">Specific</ref>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Readers[readerName]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sCard-&gt;Disconnect(<ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6aa8dacadb08049329c6eda8db3a5b79a36" kindref="member">Leave</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_sCard-&gt;ReleaseContext();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>emit<sp/>cardInserted(readerName,<sp/>ATR);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_Readers[readerName]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>m_Readers[readerName]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>QStringList<sp/>readersNames<sp/>=<sp/>m_Readers.keys();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>count<sp/>=<sp/>readersNames.count();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>readerName<sp/>=<sp/>readersNames.at(i);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!readers.contains(readerName))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Readers.remove(readerName);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/>cardRemoved(readerName);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cardevent.cpp"/>
  </compounddef>
</doxygen>
