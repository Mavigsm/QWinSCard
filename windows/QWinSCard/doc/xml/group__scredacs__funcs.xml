<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__scredacs__funcs" kind="group">
    <compoundname>scredacs_funcs</compoundname>
    <title>Smart Card and Reader Access Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__scredacs__funcs_1ga37740e6a85817709262ff5571e998438" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long Smartcards::WinSCard::Connect</definition>
        <argsstring>(const QString &amp;Reader, SHARE ShareMode, PROTOCOL PreferredProtocols)</argsstring>
        <name>Connect</name>
        <param>
          <type>const QString &amp;</type>
          <declname>Reader</declname>
        </param>
        <param>
          <type><ref refid="namespace_smartcards_1a1f007601bac24f0cea5d4fdf7a6f2d70" kindref="member">SHARE</ref></type>
          <declname>ShareMode</declname>
        </param>
        <param>
          <type><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7a" kindref="member">PROTOCOL</ref></type>
          <declname>PreferredProtocols</declname>
        </param>
        <briefdescription>
<para>Establishes a connection between the calling application and a smart card contained by a specific reader. If no card exists in the specified reader, an exception is throwed else return SUCCESS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Reader</parametername>
</parameternamelist>
<parameterdescription>
<para>The reader name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ShareMode</parametername>
</parameternamelist>
<parameterdescription>
<para>The share mode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">PreferredProtocols</parametername>
</parameternamelist>
<parameterdescription>
<para>The preferred protocols. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SUCCESS if successful. NO_SERVICE if context not valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="508" column="1" bodyfile="NativeSCard.cpp" bodystart="548" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1gab1c3fb8473dd41399a5a3743cd0fcc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7a" kindref="member">PROTOCOL</ref></type>
        <definition>PROTOCOL Smartcards::WinSCard::Reconnect</definition>
        <argsstring>(SHARE ShareMode, PROTOCOL PreferredProtocols, DISCONNECT Initialization)</argsstring>
        <name>Reconnect</name>
        <param>
          <type><ref refid="namespace_smartcards_1a1f007601bac24f0cea5d4fdf7a6f2d70" kindref="member">SHARE</ref></type>
          <declname>ShareMode</declname>
        </param>
        <param>
          <type><ref refid="namespace_smartcards_1ac11dd7126337a5bd53934318fff2fd7a" kindref="member">PROTOCOL</ref></type>
          <declname>PreferredProtocols</declname>
        </param>
        <param>
          <type><ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6a" kindref="member">DISCONNECT</ref></type>
          <declname>Initialization</declname>
        </param>
        <briefdescription>
<para>reestablishes an existing connection between the calling application and a smart card. This function moves a card handle from direct access to general access, or acknowledges and clears an error condition that is preventing further access to the card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ShareMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag that indicates whether other applications may form connections to this card. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">PreferredProtocols</parametername>
</parameternamelist>
<parameterdescription>
<para>Bitmask of acceptable protocols for this connection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Initialization</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of initialization that should be performed on the card. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Flag that indicates the established active protocol. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="516" column="1" bodyfile="NativeSCard.cpp" bodystart="574" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1gaa83c57d70f5428df32c3b36f87eeaca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Smartcards::WinSCard::Disconnect</definition>
        <argsstring>(DISCONNECT Disposition)</argsstring>
        <name>Disconnect</name>
        <param>
          <type><ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6a" kindref="member">DISCONNECT</ref></type>
          <declname>Disposition</declname>
        </param>
        <briefdescription>
<para>Terminates a connection previously opened between the calling application and a smart card in the target reader. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It requires that the context has been established </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Disposition</parametername>
</parameternamelist>
<parameterdescription>
<para>Action to take on the card in the connected reader on close. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="522" column="1" bodyfile="NativeSCard.cpp" bodystart="594" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1ga56062f0add774804384f945f151388f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Smartcards::WinSCard::isConnected</definition>
        <argsstring>(void) const</argsstring>
        <name>isConnected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check is card connected. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if it connected, false if it not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="526" column="1" bodyfile="NativeSCard.h" bodystart="526" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1ga93b60c5c1df8550e6772b53c2ab0e7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_smartcards_1_1_a_p_d_u_response" kindref="compound">APDUResponse</ref></type>
        <definition>APDUResponse Smartcards::WinSCard::Transmit</definition>
        <argsstring>(APDUCommand ApduCmd)</argsstring>
        <name>Transmit</name>
        <param>
          <type><ref refid="class_smartcards_1_1_a_p_d_u_command" kindref="compound">APDUCommand</ref></type>
          <declname>ApduCmd</declname>
        </param>
        <briefdescription>
<para>Sends a service request to the smart card and expects to receive data back from the card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ApduCmd</parametername>
</parameternamelist>
<parameterdescription>
<para>The apdu command. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <ref refid="class_smartcards_1_1_a_p_d_u_response" kindref="compound">APDUResponse</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="532" column="1" bodyfile="NativeSCard.cpp" bodystart="611" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1ga457236c8762d95325491093e49c563eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QByteArray</type>
        <definition>QByteArray Smartcards::WinSCard::GetCardStatus</definition>
        <argsstring>(DWORD &amp;state, DWORD &amp;protocol)</argsstring>
        <name>GetCardStatus</name>
        <param>
          <type>DWORD &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>DWORD &amp;</type>
          <declname>protocol</declname>
        </param>
        <briefdescription>
<para>Gets card status(card state, card protocol and card ATR). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>It requires that the card has been connected </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">state</parametername>
</parameternamelist>
<parameterdescription>
<para>The card state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">protocol</parametername>
</parameternamelist>
<parameterdescription>
<para>The card protocol. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The card ATR. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="540" column="1" bodyfile="NativeSCard.cpp" bodystart="185" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1gac0f9a5c3b9517c82b63c8872f4868ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Smartcards::WinSCard::BeginTransaction</definition>
        <argsstring>(void)</argsstring>
        <name>BeginTransaction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Begins a transaction. The function waits for the completion of all other transactions before it begins. After the transaction starts, all other applications are blocked from accessing the smart card while the transaction is in progress. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="544" column="1" bodyfile="NativeSCard.cpp" bodystart="645" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="group__scredacs__funcs_1gace31974514dff31dcc72bd0dd9ba71ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Smartcards::WinSCard::EndTransaction</definition>
        <argsstring>(DISCONNECT Disposition)</argsstring>
        <name>EndTransaction</name>
        <param>
          <type><ref refid="namespace_smartcards_1a3fe0be63db3b2bc984dda304809dbe6a" kindref="member">DISCONNECT</ref></type>
          <declname>Disposition</declname>
        </param>
        <briefdescription>
<para>Completes a previously declared transaction, allowing other applications to resume interactions with the card. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="class_s_card_exception" kindref="compound">SCardException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when a Card error condition occurs and throwErrors is set true. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Disposition</parametername>
</parameternamelist>
<parameterdescription>
<para>Action to take on the card in the connected reader on close. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="NativeSCard.h" line="550" column="1" bodyfile="NativeSCard.cpp" bodystart="659" bodyend="671"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
