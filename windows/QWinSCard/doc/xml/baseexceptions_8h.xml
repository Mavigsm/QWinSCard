<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="baseexceptions_8h" kind="file" language="C++">
    <compoundname>baseexceptions.h</compoundname>
    <includes local="no">stdexcpt.h</includes>
    <includedby refid="baseexceptions_8cpp" local="yes">baseexceptions.cpp</includedby>
    <includedby refid="scardexception_8h" local="yes">scardexception.h</includedby>
    <incdepgraph>
      <node id="37">
        <label>baseexceptions.h</label>
        <link refid="baseexceptions_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>stdexcpt.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41">
        <label>scardexception.h</label>
        <link refid="scardexception_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>baseexceptions.h</label>
        <link refid="baseexceptions_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>NativeSCard.cpp</label>
        <link refid="_native_s_card_8cpp"/>
      </node>
      <node id="40">
        <label>baseexceptions.cpp</label>
        <link refid="baseexceptions_8cpp"/>
      </node>
      <node id="43">
        <label>scardexception.cpp</label>
        <link refid="scardexception_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_base_exceptions" prot="public">BaseExceptions</innerclass>
    <briefdescription>
<para>Header file for <ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>File is contains class <ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref> must implement a std::exception in Qt-style class </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BASEEXCEPTIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASEEXCEPTIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcpt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_base_exceptions" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12" refid="class_base_exceptions_1a291bc9f98189b94aa1b49474c622e21baf75cfbb38113e56646c72d7c763ccc18" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="class_base_exceptions_1a291bc9f98189b94aa1b49474c622e21baf75cfbb38113e56646c72d7c763ccc18" kindref="member">UNRESOLVED_EXCEPTION</ref>=-10<sp/>};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa774c51bcf2f8eee36cfbd7ee6fa4082" kindref="member">BaseExceptions</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa774c51bcf2f8eee36cfbd7ee6fa4082" kindref="member">BaseExceptions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref>&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa774c51bcf2f8eee36cfbd7ee6fa4082" kindref="member">BaseExceptions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa774c51bcf2f8eee36cfbd7ee6fa4082" kindref="member">BaseExceptions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa774c51bcf2f8eee36cfbd7ee6fa4082" kindref="member">BaseExceptions</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>code)<sp/>noexcept;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref>&amp;<sp/><sp/><ref refid="class_base_exceptions_1a5f92aa2277ba66874a128160a04a7356" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions" kindref="compound">BaseExceptions</ref>&amp;);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><sp/><ref refid="class_base_exceptions_1a1a7857c450ea0ad4e77426cfd428a979" kindref="member">~BaseExceptions</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_base_exceptions_1a88813e74a780773bab20fb43ae0d52e9" kindref="member">what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/>QString<sp/><ref refid="class_base_exceptions_1aee9fb2b470e820af7886edfe7a52e333" kindref="member">errorString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1a757657cdb19292f7b3b5b8eedde8f688" kindref="member">setErrorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString&amp;);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aff7e9733d9187facb91f3d10d72fe54d" kindref="member">errorCode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_base_exceptions_1aa7fbde1d16b3ab5030424e909042c0dd" kindref="member">setErrorCode</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>code);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/>QString<sp/>m_errorString;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>m_errorCode;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BASEEXCEPTIONS_H</highlight></codeline>
    </programlisting>
    <location file="baseexceptions.h"/>
  </compounddef>
</doxygen>
