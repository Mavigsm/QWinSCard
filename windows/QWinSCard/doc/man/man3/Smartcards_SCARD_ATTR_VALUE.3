.TH "Smartcards::SCARD_ATTR_VALUE" 3 "Tue Nov 22 2016" "QWinSCard" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Smartcards::SCARD_ATTR_VALUE \- Values for AttrId of SCardGetAttrib\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <NativeSCard\&.h>\fP
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const DWORD \fBVENDOR_NAME\fP = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0100"
.br
.RI "Vendor name\&. "
.ti -1c
.RI "static const DWORD \fBVENDOR_IFD_TYPE\fP = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0101"
.br
.RI "Vendor-supplied interface device type (model designation of reader)\&. "
.ti -1c
.RI "static const DWORD \fBVENDOR_IFD_VERSION\fP = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0102"
.br
.RI "Vendor-supplied interface device version (in the form 0xMMmmbbbb where MM = major version, mm = minor version, and bbbb = build number)\&. "
.ti -1c
.RI "static const DWORD \fBVENDOR_IFD_SERIAL_NO\fP = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0103"
.br
.RI "Vendor-supplied interface device serial number\&. "
.ti -1c
.RI "static const DWORD \fBCHANNEL_ID\fP = SCARD_CLASS_COMMUNICATIONS_CONST << 16 | 0x0110"
.br
.ti -1c
.RI "static const DWORD \fBPROTOCOL_TYPES\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0120"
.br
.ti -1c
.RI "static const DWORD \fBDEFAULT_CLK\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0121"
.br
.RI "Default clock rate, in kHz\&. "
.ti -1c
.RI "static const DWORD \fBMAX_CLK\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0122"
.br
.RI "Maxinum clock rate, in kHz\&. "
.ti -1c
.RI "static const DWORD \fBDEFAULT_DATA_RATE\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0123"
.br
.RI "Default data rate, in bps\&. "
.ti -1c
.RI "static const DWORD \fBMAX_DATA_RATE\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0124"
.br
.RI "Maximum data rate, in bps\&. "
.ti -1c
.RI "static const DWORD \fBMAX_IFSD\fP = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0125"
.br
.RI "Maximum bytes for information file size device\&. "
.ti -1c
.RI "static const DWORD \fBPOWER_MGMT_SUPPORT\fP = SCARD_CLASS_POWER_MGMT_CONST << 16 | 0x0131"
.br
.RI "Zero if device does not support power down while smart card is inserted\&. Nonzero otherwise\&. "
.ti -1c
.RI "static const DWORD \fBUSER_TO_CARD_AUTH_DEVICE\fP = SCARD_CLASS_SECURITY_CONST << 16 | 0x0140"
.br
.RI "User to card authetication device\&. "
.ti -1c
.RI "static const DWORD \fBUSER_AUTH_INPUT_DEVICE\fP = SCARD_CLASS_SECURITY_CONST << 16 | 0x0142"
.br
.RI "User authetication input device\&. "
.ti -1c
.RI "static const DWORD \fBCHARACTERISTICS\fP = SCARD_CLASS_MECHANICAL_CONST << 16 | 0x0150"
.br
.ti -1c
.RI "static const DWORD \fBCURRENT_PROTOCOL_TYPE\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0201"
.br
.ti -1c
.RI "static const DWORD \fBCURRENT_CLK\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0202"
.br
.RI "Current clock rate, in kHz\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_F\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0203"
.br
.RI "Current clock conversion factor\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_D\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0204"
.br
.RI "Current bit rate conversion factor\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_N\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0205"
.br
.RI "Current guard time\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_W\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0206"
.br
.RI "Current work waiting time\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_IFSC\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0207"
.br
.RI "Current byte size for information field size card\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_IFSD\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0208"
.br
.RI "Current Current byte size for information field size device\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_BWT\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0209"
.br
.RI "Current block waiting time\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_CWT\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020a"
.br
.RI "Current character waiting time\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_EBC_ENCODING\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020b"
.br
.ti -1c
.RI "static const DWORD \fBEXTENDED_BWT\fP = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020c"
.br
.RI "Extended BWT\&. "
.ti -1c
.RI "static const DWORD \fBICC_PRESENCE\fP = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0300"
.br
.ti -1c
.RI "static const DWORD \fBICC_INTERFACE_STATUS\fP = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0301"
.br
.RI "Single byte\&. Zero if smart card electrical contact is not active; nonzero if contact is active\&. "
.ti -1c
.RI "static const DWORD \fBCURRENT_IO_STATE\fP = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0302"
.br
.RI "Current IO state\&. "
.ti -1c
.RI "static const DWORD \fBATR_STRING\fP = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0303"
.br
.RI "ATR string\&. "
.ti -1c
.RI "static const DWORD \fBICC_TYPE_PER_ATR\fP = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0304"
.br
.ti -1c
.RI "static const DWORD \fBESC_RESET\fP = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA000"
.br
.RI "ESC reset\&. "
.ti -1c
.RI "static const DWORD \fBESC_CANCEL\fP = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA003"
.br
.RI "ESC cancel\&. "
.ti -1c
.RI "static const DWORD \fBESC_AUTHREQUEST\fP = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA005"
.br
.RI "ESC authetication reques\&. "
.ti -1c
.RI "static const DWORD \fBMAXINPUT\fP = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA007"
.br
.RI "Maximum input\&. "
.ti -1c
.RI "static const DWORD \fBDEVICE_UNIT\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0001"
.br
.ti -1c
.RI "static const DWORD \fBDEVICE_IN_USE\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0002"
.br
.RI "Reserved for future use\&. "
.ti -1c
.RI "static const DWORD \fBDEVICE_FRIENDLY_NAME_ASCII\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0003"
.br
.RI "Device friendly name in ASCII\&. "
.ti -1c
.RI "static const DWORD \fBDEVICE_SYSTEM_NAME_A_ASCII\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0004"
.br
.RI "Device sysyem name in ASCII\&. "
.ti -1c
.RI "static const DWORD \fBDEVICE_FRIENDLY_NAME\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0005"
.br
.RI "Device friendly name in Unicode\&. "
.ti -1c
.RI "static const DWORD \fBDEVICE_SYSTEM_NAME\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0006"
.br
.RI "Device sysyem name in Unicode\&. "
.ti -1c
.RI "static const DWORD \fBSUPRESS_T1_IFS_REQUEST\fP = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0007"
.br
.RI "Suppress sending of T=1 IFSD packet from the reader to the card\&. (Can be used if the currently inserted card does not support an IFSD request\&.) "
.ti -1c
.RI "static const DWORD \fBPERF_NUM_TRANSMISSIONS\fP = SCARD_CLASS_PERF_CONST << 16 | 0x0001"
.br
.RI "Perfomance number transmissions\&. "
.ti -1c
.RI "static const DWORD \fBPERF_BYTES_TRANSMITTED\fP = SCARD_CLASS_PERF_CONST << 16 | 0x0002"
.br
.RI "Perfomance bytes transmitted\&. "
.ti -1c
.RI "static const DWORD \fBPERF_TRANSMISSION_TIME\fP = SCARD_CLASS_PERF_CONST << 16 | 0x0003"
.br
.RI "Perfomance transmission time\&. "
.in -1c
.SH "Detailed Description"
.PP 
Values for AttrId of SCardGetAttrib\&. 
.SH "Member Data Documentation"
.PP 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ATR_STRING = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0303\fC [static]\fP"

.PP
ATR string\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CHANNEL_ID = SCARD_CLASS_COMMUNICATIONS_CONST << 16 | 0x0110\fC [static]\fP"
/brief Channel identifier Encoded as 0xDDDDCCCC, where DDDD = data channel type and CCCC = channel number: The following encodings are defined for DDDD: 0x01 serial I/O; CCCC is a port number\&. 0x02 parallel I/O; CCCC is a port number\&. 0x04 PS/2 keyboard port; CCCC is zero\&. 0x08 SCSI; CCCC is SCSI ID number\&. 0x10 IDE; CCCC is device number\&. 0x20 USB; CCCC is device number\&. 0xFy vendor-defined interface with y in the range zero through 15; CCCC is vendor defined\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CHARACTERISTICS = SCARD_CLASS_MECHANICAL_CONST << 16 | 0x0150\fC [static]\fP"
/brief Indicating which mechanical characteristics are supported\&. If zero, no special characteristics are supported\&. Note that multiple bits can be set: 0x00000001 Card swallowing mechanism 0x00000002 Card ejection mechanism 0x00000004 Card capture mechanism All other values are reserved for future use (RFU)\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_BWT = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0209\fC [static]\fP"

.PP
Current block waiting time\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_CLK = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0202\fC [static]\fP"

.PP
Current clock rate, in kHz\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_CWT = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020a\fC [static]\fP"

.PP
Current character waiting time\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_D = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0204\fC [static]\fP"

.PP
Current bit rate conversion factor\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_EBC_ENCODING = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020b\fC [static]\fP"
/brief Current error block control encoding\&. 0 = longitudinal redundancy check (LRC) 1 = cyclical redundancy check (CRC) 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_F = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0203\fC [static]\fP"

.PP
Current clock conversion factor\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_IFSC = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0207\fC [static]\fP"

.PP
Current byte size for information field size card\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_IFSD = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0208\fC [static]\fP"

.PP
Current Current byte size for information field size device\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_IO_STATE = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0302\fC [static]\fP"

.PP
Current IO state\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_N = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0205\fC [static]\fP"

.PP
Current guard time\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_PROTOCOL_TYPE = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0201\fC [static]\fP"
/brief Current protocol type Encoded as 0x0rrrpppp where rrr is RFU and should be 0x000\&. pppp encodes the current protocol type\&. Whichever bit has been set indicates which ISO protocol is currently in use\&. (For example, if bit zero is set, T=0 protocol is in effect\&.) 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::CURRENT_W = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x0206\fC [static]\fP"

.PP
Current work waiting time\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEFAULT_CLK = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0121\fC [static]\fP"

.PP
Default clock rate, in kHz\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEFAULT_DATA_RATE = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0123\fC [static]\fP"

.PP
Default data rate, in bps\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_FRIENDLY_NAME = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0005\fC [static]\fP"

.PP
Device friendly name in Unicode\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_FRIENDLY_NAME_ASCII = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0003\fC [static]\fP"

.PP
Device friendly name in ASCII\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_IN_USE = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0002\fC [static]\fP"

.PP
Reserved for future use\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_SYSTEM_NAME = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0006\fC [static]\fP"

.PP
Device sysyem name in Unicode\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_SYSTEM_NAME_A_ASCII = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0004\fC [static]\fP"

.PP
Device sysyem name in ASCII\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::DEVICE_UNIT = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0001\fC [static]\fP"
/brief Instance of this vendor's reader attached to the computer\&. The first instance will be device unit 0, the next will be unit 1 (if it is the same brand of reader) and so on\&. Two different brands of readers will both have zero for this value\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ESC_AUTHREQUEST = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA005\fC [static]\fP"

.PP
ESC authetication reques\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ESC_CANCEL = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA003\fC [static]\fP"

.PP
ESC cancel\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ESC_RESET = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA000\fC [static]\fP"

.PP
ESC reset\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::EXTENDED_BWT = SCARD_CLASS_IFD_PROTOCOL_CONST << 16 | 0x020c\fC [static]\fP"

.PP
Extended BWT\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ICC_INTERFACE_STATUS = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0301\fC [static]\fP"

.PP
Single byte\&. Zero if smart card electrical contact is not active; nonzero if contact is active\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ICC_PRESENCE = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0300\fC [static]\fP"
/brief Single byte indicating smart card presence\&. 0 = not present 1 = card present but not swallowed (applies only if reader supports smart card swallowing) 2 = card present (and swallowed if reader supports smart card swallowing) 4 = card confiscated\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::ICC_TYPE_PER_ATR = SCARD_CLASS_ICC_STATE_CONST << 16 | 0x0304\fC [static]\fP"
/brief Single byte indicating smart card type\&. 0 = unknown type 1 = 7816 Asynchronous 2 = 7816 Synchronous Other values RFU\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::MAX_CLK = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0122\fC [static]\fP"

.PP
Maxinum clock rate, in kHz\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::MAX_DATA_RATE = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0124\fC [static]\fP"

.PP
Maximum data rate, in bps\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::MAX_IFSD = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0125\fC [static]\fP"

.PP
Maximum bytes for information file size device\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::MAXINPUT = SCARD_CLASS_VENDOR_DEFINED_CONST << 16 | 0xA007\fC [static]\fP"

.PP
Maximum input\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::PERF_BYTES_TRANSMITTED = SCARD_CLASS_PERF_CONST << 16 | 0x0002\fC [static]\fP"

.PP
Perfomance bytes transmitted\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::PERF_NUM_TRANSMISSIONS = SCARD_CLASS_PERF_CONST << 16 | 0x0001\fC [static]\fP"

.PP
Perfomance number transmissions\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::PERF_TRANSMISSION_TIME = SCARD_CLASS_PERF_CONST << 16 | 0x0003\fC [static]\fP"

.PP
Perfomance transmission time\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::POWER_MGMT_SUPPORT = SCARD_CLASS_POWER_MGMT_CONST << 16 | 0x0131\fC [static]\fP"

.PP
Zero if device does not support power down while smart card is inserted\&. Nonzero otherwise\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::PROTOCOL_TYPES = SCARD_CLASS_PROTOCOL_CONST << 16 | 0x0120\fC [static]\fP"
/brief Protocol types Encoded as 0x0rrrpppp where rrr is RFU and should be 0x000\&. pppp encodes the supported protocol types\&. A '1' in a given bit position indicates support for the associated ISO protocol, so if bits zero and one are set, both T=0 and T=1 protocols are supported\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::SUPRESS_T1_IFS_REQUEST = SCARD_CLASS_SYSTEM_CONST << 16 | 0x0007\fC [static]\fP"

.PP
Suppress sending of T=1 IFSD packet from the reader to the card\&. (Can be used if the currently inserted card does not support an IFSD request\&.) 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::USER_AUTH_INPUT_DEVICE = SCARD_CLASS_SECURITY_CONST << 16 | 0x0142\fC [static]\fP"

.PP
User authetication input device\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::USER_TO_CARD_AUTH_DEVICE = SCARD_CLASS_SECURITY_CONST << 16 | 0x0140\fC [static]\fP"

.PP
User to card authetication device\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::VENDOR_IFD_SERIAL_NO = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0103\fC [static]\fP"

.PP
Vendor-supplied interface device serial number\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::VENDOR_IFD_TYPE = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0101\fC [static]\fP"

.PP
Vendor-supplied interface device type (model designation of reader)\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::VENDOR_IFD_VERSION = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0102\fC [static]\fP"

.PP
Vendor-supplied interface device version (in the form 0xMMmmbbbb where MM = major version, mm = minor version, and bbbb = build number)\&. 
.SS "const DWORD Smartcards::SCARD_ATTR_VALUE::VENDOR_NAME = SCARD_CLASS_VENDOR_INFO_CONST << 16 | 0x0100\fC [static]\fP"

.PP
Vendor name\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for QWinSCard from the source code\&.
